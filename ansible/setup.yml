---
- hosts: web
  become: yes
  tasks:
    - name: Update all packages
      yum:
        name: "*"
        state: latest
    - name: Install pip
      yum:
        name: python3-pip
        state: present
    - name: Install specific versions of urllib3 and requests
      pip:
        name:
          - "urllib3<2"
          - "requests<2.28"
        state: present
    - name: Install the 'requests' library
      pip:
        name: requests
        state: present
    - name: Create MongoDB repository
      copy:
        content: |
          [mongodb-org-7.0]
          name=MongoDB Repository
          baseurl=https://repo.mongodb.org/yum/amazon/2/mongodb-org/7.0/x86_64/
          gpgcheck=1
          enabled=1
          gpgkey=https://pgp.mongodb.com/server-7.0.asc
        dest: /etc/yum.repos.d/mongodb-org-7.0.repo
      notify: Update package index

    - name: Install MongoDB
      yum:
        name: mongodb-org
        state: present

    - name: Start MongoDB service
      systemd:
        name: mongod
        state: started
        enabled: yes

    - name: Install Docker if not installed
      package:
        name: docker
        state: present

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create docker group if it doesn't exist
      group:
        name: docker
        state: present

    - name: Add ec2-user to the docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Remove existing container 'booking-app' if exists
      command: docker rm -f booking-app
      ignore_errors: yes

    
    - name: Pull Docker image from Docker Hub
      docker_image:
        name: wassimhassin/booking
        tag: latest
        source: pull

    - name: Run Docker container
      docker_container:
        name: booking-app
        image: wassimhassin/booking:latest
        state: started
        published_ports:
          - "8000:8000"

    - name: Check logs of the 'booking-app' container
      command: docker logs booking-app
      register: container_logs
      ignore_errors: yes

    - name: Display logs of 'booking-app'
      debug:
        msg: "{{ container_logs.stdout }}"
    
    # Install Git if not already installed
    - name: Install Git
      yum:
        name: git
        state: present

    # Clone the Neofetch repository from GitHub
    - name: Clone Neofetch repository
      git:
        repo: https://github.com/dylanaraps/neofetch.git
        dest: /tmp/neofetch
        force: yes

     # Copy the Neofetch script to /usr/bin
    - name: Copy Neofetch script to /usr/bin
      copy:
        src: /tmp/neofetch/neofetch
        dest: /usr/bin/neofetch
        mode: '0755'
        remote_src: yes

# Pull and run Elasticsearch container
    - name: Pull Elasticsearch Docker image
      docker_image:
        name: docker.elastic.co/elasticsearch/elasticsearch
        tag: 8.0.0
        source: pull

    - name: Run Elasticsearch container
      docker_container:
        name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
        state: started
        published_ports:
          - "9200:9200"
        env:
          discovery.type: single-node
        volumes:
          - "es_data:/usr/share/elasticsearch/data"

    # Pull and run Logstash container
    - name: Pull Logstash Docker image
      docker_image:
        name: docker.elastic.co/logstash/logstash
        tag: 8.0.0
        source: pull

    - name: Run Logstash container
      docker_container:
        name: logstash
        image: docker.elastic.co/logstash/logstash:8.0.0
        state: started
        published_ports:
          - "5044:5044"

    # Pull and run Kibana container
    - name: Pull Kibana Docker image
      docker_image:
        name: docker.elastic.co/kibana/kibana
        tag: 8.0.0
        source: pull

    - name: Run Kibana container
      docker_container:
        name: kibana
        image: docker.elastic.co/kibana/kibana:8.0.0
        state: started
        published_ports:
          - "5601:5601"

  handlers:
    - name: Check Python Installation
      command: ls -l /usr/local/bin/python3.9
      register: python_check
      ignore_errors: yes

    - name: Debug Python Installation
      debug:
        msg: "Python 3.9 Installation Check: {{ python_check.stdout }}"
      when: python_check.failed

    - name: Update package index
      yum:
        name: '*'
        state: latest